/*
 * Copyright 2022 GlobalFoundries PDK Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *      Single Port SRAM cell name : gf180mcu_fd_ip_sram__sram256x8m8wm1
 *      Technology                 : GF 180nm 5V Green
 *
 *      ---------
 *      Pin name:
 *      ---------
 *      Input Pins : CLK CEN GWEN WEN[7:0] A[7:0] D[7:0]
 *      Inout Pins:  VDD VSS
 *      Output Pins: Q[7:0]
 *
 *     Revision History: 1.0 (Initial Release: June 20, 2014)
 */

library(gf180mcu_fd_ip_sram__sram256x8m8wm1__tt_025C_1v80) {
        delay_model             : table_lookup;
        revision                : 1.0;
        date                    : "June 20, 2014";
        comment                 : "GF 180nm 5V Green";
        voltage_unit            : "1V";
        time_unit               : "1ns";
        current_unit            : "1mA";
        leakage_power_unit      : "1mW";
        nom_process             : 1;
        nom_temperature         : 25;
        nom_voltage             : 1.8;
        capacitive_load_unit    (1,pf);
        pulling_resistance_unit : "1kohm";

        /* additional header data */
        default_fanout_load            : 1;
        default_inout_pin_cap          : 0.045;
        default_input_pin_cap          : 0.045;
        default_output_pin_cap         : 0;
        default_max_transition         : 4.617;
        default_cell_leakage_power     : 0;

         /* default attributes */
         slew_derate_from_library      : 1.000;
         slew_lower_threshold_pct_fall : 10.000;
         slew_upper_threshold_pct_fall : 90.000;
         slew_lower_threshold_pct_rise : 10.000;
         slew_upper_threshold_pct_rise : 90.000;
         input_threshold_pct_fall      : 50.000;
         input_threshold_pct_rise      : 50.000;
         output_threshold_pct_fall     : 50.000;
         output_threshold_pct_rise     : 50.000;
         default_leakage_power_density : 0;

        /* k-factors */
        k_process_recovery_fall        : 1;
        k_process_recovery_rise        : 1;
        k_process_cell_fall            : 1;
        k_process_cell_leakage_power   : 0;
        k_process_cell_rise            : 1;
        k_process_fall_transition      : 1;
        k_process_hold_fall            : 1;
        k_process_hold_rise            : 1;
        k_process_internal_power       : 0;
        k_process_min_pulse_width_high : 1;
        k_process_min_pulse_width_low  : 1;
        k_process_setup_fall           : 1;
        k_process_setup_rise           : 1;
        k_process_wire_cap             : 0;
        k_process_wire_res             : 0;
        k_process_pin_cap              : 0;
        k_process_rise_transition      : 1;
        k_temp_cell_fall               : 0.000;
        k_temp_cell_rise               : 0.000;
        k_temp_hold_fall               : 0.000;
        k_temp_hold_rise               : 0.000;
        k_temp_min_pulse_width_high    : 0.000;
        k_temp_min_pulse_width_low     : 0.000;
        k_temp_min_period              : 0.000;
        k_temp_rise_propagation        : 0.000;
        k_temp_fall_propagation        : 0.000;
        k_temp_rise_transition         : 0.000;
        k_temp_fall_transition         : 0.000;
        k_temp_recovery_fall           : 0.000;
        k_temp_recovery_rise           : 0.000;
        k_temp_setup_fall              : 0.000;
        k_temp_setup_rise              : 0.000;
        k_volt_cell_fall               : 0.000;
        k_volt_cell_rise               : 0.000;
        k_volt_hold_fall               : 0.000;
        k_volt_hold_rise               : 0.000;
        k_volt_min_pulse_width_high    : 0.000;
        k_volt_min_pulse_width_low     : 0.000;
        k_volt_min_period              : 0.000;
        k_volt_recovery_fall           : 0.000;
        k_volt_recovery_rise           : 0.000;
        k_volt_setup_fall              : 0.000;
        k_volt_setup_rise              : 0.000;
        k_volt_rise_propagation        : 0.000;
        k_volt_fall_propagation        : 0.000;
        k_volt_rise_transition         : 0.000;
        k_volt_fall_transition         : 0.000;

         voltage_map (VDD, 1.8);
         voltage_map (VSS, 0.00);
         operating_conditions(tt_1p8v_25C) {
                process       : 1;
                temperature   : 25;
                voltage       : 1.8;
                tree_type     : balanced_tree;
         }

         default_operating_conditions : tt_1p8v_25C;
         wire_load("Estimate") {
                resistance    : 1.44e-05;
                capacitance   : 0.00018;
                area          : 1.7;
                slope         : 500;
                fanout_length (1,500);
         }
         power_lut_template(power_template) {
            variable_1 : input_transition_time;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_delay_template) {
            variable_1 : input_net_transition;
            variable_2 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(q_slew_template) {
            variable_1 : total_output_net_capacitance;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }
         lu_table_template(constraint_template) {
            variable_1 : related_pin_transition;
            variable_2 : constrained_pin_transition;
                 index_1 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
                 index_2 ("1001, 1002, 1003, 1004, 1005, 1006, 1007");
         }

         library_features(report_delay_calculation);

         type (A_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
         type (Q_BUS) {
                base_type : array;
                data_type : bit;
                bit_width : 8;
                bit_from  : 7;
                bit_to    : 0;
                downto    : true;
         }
 cell(gf180mcu_fd_ip_sram__sram256x8m8wm1) {
        area             : 147212.4368;
        dont_use         : TRUE;
        dont_touch       : TRUE;
        interface_timing : TRUE;
        memory() {
                type          : ram;
                address_width : 8;
                word_width    : 8;
        }

                 bus(Q)   {
                  bus_type             : Q_BUS;
                  direction            : output;
                  max_capacitance      : 0.9747;
                  memory_read() {
                        address        : A;
                  }
                  timing() {
                          related_pin  : "CLK";
                          timing_type  : rising_edge;
                          timing_sense : non_unate;
       		  when : "((!CEN) & (GWEN))";
        	  sdf_cond : "CEN== 1'b0 && GWEN== 1'b1";
                          cell_rise(q_delay_template) {
			  index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
			  index_2 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
                            "16.1892, 16.2684, 16.4556, 16.8096, 17.2884, 17.994, 18.9", \
                            "16.2108, 16.2792, 16.4796, 16.812, 17.3208, 18.0048, 18.9192", \
                            "16.2708, 16.3284, 16.5336, 16.8876, 17.388, 18.1068, 18.9792", \
                            "16.3848, 16.4628, 16.6596, 17.0064, 17.5044, 18.2088, 19.11", \
                            "16.5312, 16.62, 16.824, 17.1552, 17.6568, 18.342, 19.248", \
                            "16.722, 16.7952, 16.986, 17.3604, 17.8392, 18.5148, 19.428", \
                            "16.9764, 17.058, 17.2368, 17.6076, 18.0816, 18.7836, 19.6884" \
                          )
                          }
                          rise_transition(q_slew_template) {
                          index_1 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
  	                     "0.501768, 0.587328, 0.881388, 1.43976, 2.3292, 3.64464, 5.3358" \
                          )

                          }
                          cell_fall(q_delay_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
                            "17.106, 17.1648, 17.3232, 17.5812, 17.8548, 18.2016, 18.6444", \
                            "17.1168, 17.1768, 17.3352, 17.5728, 17.8728, 18.216, 18.6768", \
                            "17.1672, 17.2452, 17.412, 17.6436, 17.9328, 18.3048, 18.7164", \
                            "17.2944, 17.3592, 17.532, 17.7684, 18.0528, 18.4296, 18.8472", \
                            "17.4384, 17.5164, 17.6832, 17.9064, 18.1956, 18.5544, 18.9912", \
                            "17.6172, 17.7024, 17.8524, 18.1236, 18.39, 18.7248, 19.1784", \
                            "17.88, 17.952, 18.0912, 18.3672, 18.6192, 18.9864, 19.4232" \
                          )
                          }
                          fall_transition(q_slew_template) {
                          index_1 ("0.01, 0.02735, 0.08826, 0.2046, 0.3858, 0.6401, 0.9747");
                          values  ( \
                            "0.510036, 0.562236, 0.751656, 0.980544, 1.35432, 1.8816, 2.53392" \
                          )
                          }
                  }
          }
          pin(CLK)   {
                  direction            : input;
                  capacitance          : 0.282773;
                  clock                : true;
                  max_transition       : 4.617;
                  min_pulse_width_high : 10.91484;
                  min_pulse_width_low  : 10.288695;
                  min_period           : 22.4703;

/* WRITE POWER */
             internal_power() {
              when : "!CEN & !GWEN & (!WEN[0] | !WEN[1] | !WEN[2] | !WEN[3] | !WEN[4] | !WEN[5] | !WEN[6] | !WEN[7])";
              rise_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("102.006, 102.006, 102.006, 102.006, 102.006, 102.006, 102.006");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("102.006, 102.006, 102.006, 102.006, 102.006, 102.006, 102.006");
              }
             }
/* DISABLED POWER */
             internal_power() {
              when : "CEN";
              rise_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05, 4.42944e-05");
              }
             }
/* READ POWER */
             internal_power() {
             when : "!CEN & GWEN";
             rise_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("93.51, 93.51, 93.51, 93.51, 93.51, 93.51, 93.51");
              }
              fall_power(power_template) {
                index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                values  ("93.51, 93.51, 93.51, 93.51, 93.51, 93.51, 93.51");
              }
             }
          }

          pg_pin(VDD) {
                  voltage_name     : VDD;
                  pg_type          : primary_power;
          }
          pg_pin(VSS) {
                  voltage_name     : VSS;
                  pg_type          : primary_ground;
          }
          pin(CEN)   {
                  direction            : input;
                  capacitance          : 0.0183483;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.55683, 1.53714, 1.54451, 1.67651, 1.94766, 2.37446, 2.88629", \
                            "1.54429, 1.52185, 1.53274, 1.65781, 1.90652, 2.35422, 2.8699", \
                            "1.45992, 1.44716, 1.45541, 1.58686, 1.85856, 2.28525, 2.80126", \
                            "1.3198, 1.30303, 1.31422, 1.44826, 1.68949, 2.10859, 2.6565", \
                            "1.28743, 1.27572, 1.28337, 1.41636, 1.68564, 2.05843, 2.55024", \
                            "1.28775, 1.27604, 1.29114, 1.41658, 1.68553, 2.08186, 2.5674", \
                            "1.29177, 1.27505, 1.27921, 1.41658, 1.67827, 2.0889, 2.56212" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.1518, 1.16936, 1.23589, 1.38028, 1.6841, 2.06107, 2.57092", \
                            "1.13121, 1.13923, 1.21524, 1.3596, 1.66342, 2.04039, 2.55035", \
                            "1.08002, 1.09462, 1.16475, 1.31154, 1.61117, 1.99144, 2.49106", \
                            "1.07985, 1.09214, 1.16425, 1.31107, 1.61062, 1.991, 2.49051", \
                            "1.07851, 1.09311, 1.16312, 1.30991, 1.60952, 1.9899, 2.48941", \
                            "1.07873, 1.0933, 1.16343, 1.31019, 1.60985, 1.99012, 2.48974", \
                            "1.07738, 1.09244, 1.16255, 1.30934, 1.60897, 1.98924, 2.48886" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "3.82855, 3.85, 3.8445, 3.70656, 3.44542, 3.03479, 2.56157", \
                            "3.84846, 3.86958, 3.86694, 3.73615, 3.49712, 3.06262, 2.58346", \
                            "3.92304, 3.93437, 3.93019, 3.79291, 3.53122, 3.12059, 2.6422", \
                            "4.08067, 4.09596, 4.0887, 3.9589, 3.72361, 3.31848, 2.80313", \
                            "4.33301, 4.34467, 4.33708, 4.20409, 3.93481, 3.56202, 3.07021", \
                            "4.64497, 4.65674, 4.64167, 4.51616, 4.24721, 3.85099, 3.36534", \
                            "4.98113, 4.99785, 4.99367, 4.85639, 4.5947, 4.18396, 3.71074" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "4.04624, 4.03117, 3.96121, 3.81436, 3.51472, 3.13445, 2.63483", \
                            "4.07484, 4.0656, 3.98981, 3.84296, 3.54343, 3.16305, 2.66343", \
                            "4.13171, 4.11708, 4.0469, 3.90016, 3.60052, 3.22014, 2.72063", \
                            "4.29319, 4.28098, 4.20882, 4.06197, 3.76244, 3.38206, 2.88255", \
                            "4.5419, 4.52738, 4.45731, 4.31057, 4.01093, 3.63055, 3.13104", \
                            "4.85408, 4.83945, 4.76938, 4.62253, 4.32289, 3.94262, 3.443", \
                            "5.19552, 5.18045, 5.11038, 4.96353, 4.664, 4.28362, 3.78411" \
                          )
                          }
                 }
          }
          pin(GWEN)   {
                  direction            : input;
                  capacitance          : 0.0443232;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.8898, 1.89981, 1.98495, 2.12795, 2.3529, 2.63703, 2.96098", \
                            "1.86164, 1.87968, 1.96064, 2.10265, 2.33156, 2.62306, 2.94338", \
                            "1.8018, 1.81973, 1.89607, 2.03896, 2.26402, 2.54804, 2.8743", \
                            "1.66012, 1.67002, 1.75175, 1.8975, 2.11695, 2.40911, 2.73295", \
                            "1.42725, 1.44507, 1.5213, 1.66375, 1.88705, 2.17415, 2.50041", \
                            "1.21175, 1.22949, 1.30237, 1.44881, 1.67189, 1.95778, 2.28371", \
                            "0.99825, 1.00807, 1.09258, 1.23529, 1.46036, 1.74438, 2.0691" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.41307, 2.43023, 2.51977, 2.68081, 2.98177, 3.38349, 3.8863", \
                            "2.39184, 2.41241, 2.49865, 2.65991, 2.96087, 3.36259, 3.86738", \
                            "2.32386, 2.34124, 2.43232, 2.59171, 2.89289, 3.29461, 3.79731", \
                            "2.18251, 2.20275, 2.28932, 2.45025, 2.75121, 3.15293, 3.65574", \
                            "1.94942, 1.96669, 2.05766, 2.21705, 2.51823, 2.91995, 3.42474", \
                            "1.73316, 1.75098, 1.84085, 2.00156, 2.30274, 2.70446, 3.20925", \
                            "1.52042, 1.53758, 1.62712, 1.78816, 2.08923, 2.49095, 2.99574" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.64099, 2.629, 2.54925, 2.40251, 2.20737, 2.01124, 1.7996", \
                            "2.6092, 2.59677, 2.5157, 2.37193, 2.17624, 1.96944, 1.7721", \
                            "2.55497, 2.53341, 2.45707, 2.31594, 2.12014, 1.92478, 1.7314", \
                            "2.59897, 2.58456, 2.50096, 2.35983, 2.17019, 1.96658, 1.76814", \
                            "2.73636, 2.7148, 2.64385, 2.51361, 2.3023, 2.10617, 1.91213", \
                            "2.91214, 2.89058, 2.81985, 2.67311, 2.47819, 2.28624, 2.08032", \
                            "3.10189, 3.08792, 3.00421, 2.86308, 2.66739, 2.47192, 2.2737" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.34541, 1.32308, 1.22717, 1.07775, 0.775269, 0.384263, 0", \
                            "1.31472, 1.29619, 1.20042, 1.04309, 0.744744, 0.354112, 0", \
                            "1.2591, 1.23605, 1.13995, 0.990143, 0.688677, 0.298048, 0", \
                            "1.30269, 1.28405, 1.18463, 1.03026, 0.732611, 0.341616, 0", \
                            "1.44012, 1.41757, 1.32121, 1.16782, 0.870012, 0.479017, 0", \
                            "1.61843, 1.59346, 1.49754, 1.34431, 1.04579, 0.654808, 0.165045", \
                            "1.80631, 1.78354, 1.68795, 1.53395, 1.23589, 0.844921, 0.354541" \
                          )
                          }
                 }
          }
          bus(WEN)   {
                  bus_type             : Q_BUS;
                  direction            : input;
                  capacitance          : 0.00715846;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0, 0, 0, 0, 0, 0, 0.187958", \
                            "0, 0, 0, 0, 0, 0.012496, 0.213907", \
                            "0, 0, 0, 0, 0, 0.068695, 0.264407", \
                            "0, 0, 0, 0, 0, 0.023804, 0.220402", \
                            "0, 0, 0, 0, 0, 0, 0.086086", \
                            "0, 0, 0, 0, 0, 0, 0", \
                            "0, 0, 0, 0, 0, 0, 0" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0.634953, 0.653048, 0.749804, 0.899217, 1.20408, 1.59346, 2.08571", \
                            "0.667513, 0.68079, 0.780285, 0.934648, 1.23687, 1.63383, 2.12421", \
                            "0.726506, 0.742973, 0.842127, 0.991243, 1.29506, 1.6819, 2.17767", \
                            "0.681978, 0.695805, 0.795784, 0.948805, 1.25019, 1.64032, 2.13246", \
                            "0.547657, 0.565609, 0.662805, 0.814396, 1.11675, 1.50667, 1.99771", \
                            "0.36652, 0.386639, 0.48301, 0.634667, 0.937178, 1.32649, 1.81731", \
                            "0.177471, 0.19484, 0.290542, 0.443982, 0.74547, 1.13538, 1.62657" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.65133, 2.63054, 2.5542, 2.41175, 2.20913, 2.0152, 1.82512", \
                            "2.62064, 2.59996, 2.52362, 2.38117, 2.17712, 1.98462, 1.78893", \
                            "2.56465, 2.54386, 2.46752, 2.32507, 2.12113, 1.92852, 1.73283", \
                            "2.60854, 2.58775, 2.51141, 2.36907, 2.17019, 1.97252, 1.77672", \
                            "2.74593, 2.72525, 2.64891, 2.51361, 2.30241, 2.10991, 1.91422", \
                            "2.92127, 2.90037, 2.82403, 2.68158, 2.47819, 2.28624, 2.08934", \
                            "3.11179, 3.091, 3.01466, 2.87232, 2.66827, 2.47577, 2.27997" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.34981, 1.32737, 1.23346, 1.07775, 0.775269, 0.384263, 0", \
                            "1.31921, 1.30122, 1.20042, 1.04323, 0.744744, 0.354112, 0", \
                            "1.26301, 1.24017, 1.14241, 0.990143, 0.688677, 0.298048, 0", \
                            "1.30654, 1.28909, 1.19087, 1.03158, 0.732611, 0.341616, 0", \
                            "1.44441, 1.42175, 1.32363, 1.16782, 0.870012, 0.479017, 0", \
                            "1.62096, 1.59698, 1.50326, 1.34431, 1.04579, 0.654808, 0.165045", \
                            "1.81027, 1.78772, 1.69422, 1.53406, 1.23589, 0.844921, 0.355256" \
                          )
                          }
                 }
          }
          bus(A)   {
                  bus_type             : A_BUS;
                  direction            : input;
                  capacitance          : 0.0404789;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.58389, 1.58334, 1.59192, 1.75175, 2.01245, 2.44717, 2.95471", \
                            "1.61491, 1.61238, 1.62085, 1.75439, 2.0427, 2.44915, 2.98199", \
                            "1.66771, 1.67189, 1.6808, 1.83106, 2.10782, 2.53088, 3.02885", \
                            "1.62734, 1.63009, 1.63405, 1.76407, 2.05238, 2.46697, 2.99464", \
                            "1.49072, 1.49215, 1.49644, 1.63768, 1.92071, 2.35675, 2.86066", \
                            "1.31882, 1.31175, 1.31668, 1.48973, 1.7424, 2.17932, 2.68587", \
                            "1.12496, 1.12703, 1.13575, 1.29327, 1.55386, 1.98726, 2.4937" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.85438, 1.88034, 1.92775, 2.08582, 2.39734, 2.80698, 3.31199", \
                            "1.88243, 1.90432, 1.95547, 2.1274, 2.41615, 2.84207, 3.33971", \
                            "1.93677, 1.96559, 2.01443, 2.18042, 2.47621, 2.89278, 3.39559", \
                            "1.892, 1.92214, 1.97263, 2.14577, 2.43584, 2.85791, 3.35423", \
                            "1.75175, 1.78761, 1.8381, 2.01113, 2.30439, 2.7225, 3.21211", \
                            "1.58752, 1.60996, 1.6621, 1.81742, 2.12025, 2.5443, 3.04535", \
                            "1.39436, 1.40932, 1.46597, 1.6467, 1.93072, 2.35576, 2.84306" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.31885, 1.33155, 1.31142, 1.14622, 0.893024, 0.555269, 0.223059", \
                            "1.34123, 1.35223, 1.33265, 1.19335, 0.933339, 0.602932, 0.205915", \
                            "1.40217, 1.41405, 1.39469, 1.24233, 1.00755, 0.662761, 0.302506", \
                            "1.54539, 1.55859, 1.54033, 1.40118, 1.14728, 0.805937, 0.415613", \
                            "1.77936, 1.79135, 1.77639, 1.63251, 1.35355, 1.0158, 0.670395", \
                            "2.08032, 2.09143, 2.07328, 1.90575, 1.65253, 1.31473, 0.969386", \
                            "2.38755, 2.39943, 2.38007, 2.21496, 1.96174, 1.62393, 1.27856" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.51701, 1.50205, 1.43099, 1.2754, 1.084, 0.858935, 0.62777", \
                            "1.53758, 1.52372, 1.45134, 1.29581, 1.10442, 0.879351, 0.648186", \
                            "1.59995, 1.58532, 1.51415, 1.35861, 1.16719, 0.942194, 0.711084", \
                            "1.74669, 1.73118, 1.661, 1.50546, 1.31399, 1.08903, 0.857846", \
                            "1.97758, 1.96251, 1.89145, 1.73591, 1.5444, 1.31948, 1.08834", \
                            "2.27623, 2.26149, 2.19043, 2.03489, 1.84349, 1.6181, 1.38732", \
                            "2.58566, 2.57213, 2.49964, 2.3441, 2.15259, 1.92764, 1.69642" \
                          )
                          }
                 }
          }
          bus(D)   {
                  bus_type             : Q_BUS;
                  memory_write() {
                          address      : A;
                          clocked_on   : "CLK";
                  }
                  direction            : input;
                  capacitance          : 0.0160437;
                  timing() {
                          related_pin  : CLK;
                          timing_type  : setup_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.79762, 1.83007, 1.88859, 2.01113, 2.14225, 2.23069, 2.35279", \
                            "1.81225, 1.84019, 1.9107, 2.03368, 2.16898, 2.23443, 2.34377", \
                            "1.88155, 1.91235, 1.96658, 2.09957, 2.22717, 2.31473, 2.42286", \
                            "1.82677, 1.8535, 1.92478, 2.05887, 2.1857, 2.2803, 2.37886", \
                            "1.70005, 1.73426, 1.78354, 1.92126, 2.05524, 2.13543, 2.26017", \
                            "1.52779, 1.5565, 1.61964, 1.74119, 1.87231, 1.95569, 2.08175", \
                            "1.331, 1.35586, 1.42164, 1.55628, 1.68542, 1.76363, 1.87693" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "0, 0, 0.03718, 0.207596, 0.479842, 0.867295, 1.34332", \
                            "0, 0, 0.06347, 0.235245, 0.507496, 0.895202, 1.37049", \
                            "0.042493, 0.052987, 0.115133, 0.292512, 0.565213, 0.952688, 1.42824", \
                            "0, 0.01034, 0.079772, 0.249733, 0.521972, 0.909689, 1.38501", \
                            "0, 0, 0, 0.114538, 0.387178, 0.774653, 1.25062", \
                            "0, 0, 0, 0, 0.209484, 0.597201, 1.07294", \
                            "0, 0, 0, 0, 0.021021, 0.408287, 0.883619" \
                          )
                          }
                  }
                  timing() {
                          related_pin     : CLK;
                          timing_type     : hold_rising;
                          rise_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "1.0226, 0.99253, 0.932019, 0.804584, 0.674971, 0.593505, 0.460119", \
                            "0.992398, 0.970904, 0.904805, 0.774147, 0.641267, 0.575619, 0.462737", \
                            "0.931502, 0.901703, 0.840004, 0.713768, 0.584188, 0.502942, 0.382932", \
                            "0.98175, 0.964018, 0.890516, 0.764324, 0.632126, 0.535249, 0.434005", \
                            "1.11093, 1.08084, 1.02039, 0.895147, 0.763246, 0.682, 0.56243", \
                            "1.29225, 1.26237, 1.20068, 1.07411, 0.944768, 0.863555, 0.732413", \
                            "1.48346, 1.46553, 1.39205, 1.26581, 1.13622, 1.05513, 0.934989" \
                          )
                          }
                          fall_constraint(constraint_template) {
                          index_1 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          index_2 ("0.02, 0.1027, 0.3929, 0.9472, 1.811, 3.022, 4.617");
                          values  ( \
                            "2.16733, 2.1681, 2.09924, 1.92335, 1.65044, 1.26653, 0.797995", \
                            "2.1362, 2.13752, 2.06888, 1.89299, 1.62008, 1.23609, 0.767558", \
                            "2.07658, 2.07746, 2.00849, 1.8326, 1.55969, 1.17575, 0.707212", \
                            "2.12707, 2.12795, 2.05898, 1.88309, 1.61018, 1.2262, 0.757669", \
                            "2.255, 2.25621, 2.18757, 2.01168, 1.73877, 1.35487, 0.886281", \
                            "2.43716, 2.43804, 2.36907, 2.19318, 1.92027, 1.53637, 1.0678", \
                            "2.62801, 2.62955, 2.56058, 2.38469, 2.11178, 1.72777, 1.25926" \
                          )
                          }
                 }
        }
          cell_leakage_power : 4.42944e-05;
}
}
